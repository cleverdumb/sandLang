atom Empty alias E {
    section property {
        cdef render 0
    }
}

atom Gas alias G {
    section property {
        cdef render 1
        cdef color dynamic

        cdef key g
        cdef size 10

        def temp 20
    }
    section color {
        [temp] < 0 => 0, 0, 255
        [temp] > 50 => 255, 0, 0
        true => ([temp]/50)*255, 0, 255 - ([temp]/50)*255
    }
    section update {
        match (0, 0, 2, 1) sym(x) {
            eval [temp] > [$a'-2'51'1]
            pattern
            x _
        }
        -> {
            pattern
            _ x
        }

        match (0, 0, 2, 1) sym(x) {
            eval [temp] > [temp-1,0]
            pattern
            x G
        }
        -> {
            set [temp] = [temp] - 1
            set [temp-1,0] = [temp-1,0] + 1
        }

        match (0, 0, 1, 2) sym(y) {
            eval [temp] > [$a'-2'51'1]
            pattern
            x
            _
        }
        -> {
            pattern
            _
            x
        }

        match (0, 0, 1, 2) sym(y) {
            eval [temp] > [temp-0,1]
            pattern
            x
            G
        }
        -> {
            set [temp] = [temp] - 1
            set [temp-0,1] = [temp-0,1] + 1
        }

        match (0, 0, 0, 0) {
            eval [temp] > 0
        }
        -> P-0.003 {
            set [temp] = [temp] - 1
            non-break
        }

        match (0, 0, 0, 0) {
            eval [temp] < 0
        }
        -> {
            set [temp] = 0
            non-break
        }

        match (0, 0, 0, 0) {
            eval [temp] > 50
        }
        -> {
            set [temp] = 50
            non-break
        }
    }
}

ruleset TemperatureMod {
    match (0, 0, 2, 1) sym(x) {
        pattern
        x _
    }
    -> {
        pattern
        _ x
    }

    match (0, 0, 1, 2) sym(y) {
        pattern
        x
        _
    }
    -> {
        pattern
        _
        x
    }

    match (0, 0, 2, 1) sym(x) {
        pattern
        x G
    }
    -> {
        set [temp-1,0] = [temp-1,0] + [mod]
        pattern
        _ /
    }

    match (0, 0, 1, 2) sym(y) {
        pattern
        x
        G
    }
    -> {
        set [temp-0,1] = [temp-0,1] + [mod]
        pattern
        _
        /
    }
}

atom Heat alias H {
    section property {
        cdef render 0

        cdef key h
        cdef size 10

        def temp 40
        cdef mod 10
    }
    section update {
        inherit TemperatureMod
    }
}

atom Cold alias C {
    section property {
        cdef render 0

        cdef key c
        cdef size 10

        def temp 40
        cdef mod -10
    }
    section update {
        inherit TemperatureMod
    }
}